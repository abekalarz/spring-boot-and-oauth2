buildscript {
	ext {
		kotlinVersion = '1.3.11'
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'pl.springbootoauth2'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/milestone" }
}

ext['springCloudVersion'] = 'Greenwich.M3'

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
	implementation('org.springframework.cloud:spring-cloud-starter-oauth2')
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	implementation("org.jetbrains.kotlin:kotlin-reflect")

	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'

	testImplementation('org.springframework.boot:spring-boot-starter-test')
//	testImplementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.2.0')
	testImplementation('io.projectreactor:reactor-test')
	testImplementation('org.springframework.security:spring-security-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

test {
	systemProperty "spring.profiles.active", "integration"
}

def dockerDir = "$projectDir/docker"
def dockerGroup = 'Docker'
task dockerStop(type: Exec) {
	workingDir "$dockerDir"
	inputs.dir "$dockerDir"

	group = "$dockerGroup"

	commandLine "$dockerDir/mongo-import/docker_compose_down.sh"
}

task dockerRun(type: Exec) {
	dependsOn "build"
	workingDir "$dockerDir"
	inputs.dir "$dockerDir"

	group = "$dockerGroup"

	commandLine "$dockerDir/mongo-import/docker_compose_up.sh"

	finalizedBy dockerStop
}
